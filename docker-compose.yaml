services:
  php:
    build:
      context: ./
    volumes:
      - .:/app:cached
      - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker/php/conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini
    working_dir: /app
    container_name: sanctuary_app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - sanctuary_network

  nginx:
    image: nginx:1.15.8-alpine
    ports:
      - 127.0.0.1:${NGINX_PORT}:80
    volumes:
      - .:/app:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro,cached
    container_name: sanctuary_nginx
    networks:
      - sanctuary_network

  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - "5433:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    command: >
      postgres -c wal_level=logical
      -c max_wal_senders=5
      -c max_replication_slots=5
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - sanctuary_network
###< doctrine/doctrine-bundle ###

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
  ###< doctrine/doctrine-bundle ###

networks:
  sanctuary_network:
    name: sanctuary_network